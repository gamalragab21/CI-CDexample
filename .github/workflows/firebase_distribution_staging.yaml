name: Manual Workflow

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Download APK from latest release
        uses: actions/github-script@v4
        with:
          script: |
              const release = await github.repos.getLatestRelease({
                owner: 'gamalragab21',
                repo: 'CI-CDexample'
              });
              const asset = release.data.assets.find(a => a.name === 'app-release-signed.apk');
              if (!asset) {
                throw new Error('APK asset not found in release');
              }
              const url = asset.browser_download_url;
              const response = await fetch(url);
              if (!response.ok) {
                throw new Error('Failed to download APK asset');
              }
              await fs.promises.writeFile('app-release-signed.apk', await response.buffer());
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #      - name: Download APK from GitHub release
      #        uses: actions/download-artifact@v2
      #        with:
      #          name: app-release-signed
      #          path: app/
      #          ref: ${{ github.event.release.tag_name }}

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.5.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          #          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: qa
          file: app/app-release-signed.apk

#      - name: Install and configure Firebase CLI
#        uses: firebase/firebase-cli@v1.2.0
#        with:
#          args: 'deploy --only hosting'
#        env:
#          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

#      - name: Upload APK to Firebase App Distribution
#        uses: firebase/app-distribution-upload@v1
#        with:
#          appId: ${{ secrets.FIREBASE_APP_ID }}
#          token: ${{ secrets.FIREBASE_TOKEN }}
#          apkPath: app/app-release-signed.apk
#          releaseNotesFile: app/release_notes.txt